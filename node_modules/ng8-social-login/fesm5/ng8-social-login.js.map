{"version":3,"file":"ng8-social-login.js","sources":["ng://ng8-social-login/lib/models/config-injection-token.ts","ng://ng8-social-login/lib/providers/oauth-provider.ts","ng://ng8-social-login/lib/models/provider.ts","ng://ng8-social-login/lib/providers/facebook-provider.ts","ng://ng8-social-login/lib/providers/google-provider.ts","ng://ng8-social-login/lib/services/social-login.service.ts","ng://ng8-social-login/lib/ngx-social-login.module.ts","ng://ng8-social-login/lib/models/social-user.ts","ng://ng8-social-login/lib/models/config/facebook-provider-config.ts","ng://ng8-social-login/lib/models/config/google-provider-config.ts","ng://ng8-social-login/lib/models/config/provider-config.ts"],"sourcesContent":["import {InjectionToken} from '@angular/core';\nimport {ProviderConfig} from './config/provider-config';\n\nexport const CONFIG: InjectionToken<ProviderConfig> = new InjectionToken<ProviderConfig>('providers configuration');\n","import { Observable } from 'rxjs';\nimport { Provider } from '../models/provider';\nimport { SocialUser } from '../models/social-user';\n\nexport abstract class OauthProvider {\n    private readonly ID_PREFIX = 'social-login__';\n\n    constructor(provider: Provider, src: string, onload: () => void, async = true) {\n        const id = this.ID_PREFIX + provider;\n\n        if (document.getElementById(id)) {\n            return;\n        }\n\n        const script = document.createElement('script');\n        script.id = id;\n        script.async = async;\n        script.src = src;\n        script.onload = onload;\n        script.defer = true;\n        document.head.appendChild(script);\n    }\n\n    abstract login(): Observable<SocialUser>;\n\n    abstract logout(): Observable<any>;\n}\n","export enum Provider {\n    FACEBOOK = 'facebook',\n    GOOGLE = 'google'\n}\n","import { OauthProvider } from './oauth-provider';\nimport { bindCallback, Observable, of } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { FacebookProviderConfig } from '../models/config/facebook-provider-config';\nimport { SocialUser } from '../models/social-user';\nimport { Provider } from '../models/provider';\n\ndeclare const FB: any;\n\nexport class FacebookProvider extends OauthProvider {\n    constructor(private _config: FacebookProviderConfig) {\n        super(Provider.FACEBOOK, '//connect.facebook.net/en_US/sdk.js', () => {\n            const initConfig = this._config.initOptions;\n            const config = initConfig.version ? initConfig : { ...initConfig, ...{ version: 'v2.9' } };\n            FB.init(config);\n        });\n    }\n\n    login(): Observable<SocialUser> {\n        return bindCallback((cb) => FB.login(cb, this._config.loginOptions))().pipe(\n            mergeMap((loginResponse: any) =>\n                bindCallback((cb) => FB.api('/me?fields=name,email,picture,first_name,last_name', cb))().pipe(\n                    map((meResponse: any) => ({\n                            id: meResponse.id,\n                            name: meResponse.name,\n                            email: meResponse.email,\n                            profileImg: `https://graph.facebook.com/${meResponse.id}/picture?type=normal`,\n                            firstName: meResponse.first_name,\n                            lastName: meResponse.last_name,\n                            idToken: loginResponse.authResponse.signedRequest,\n                            accessToken: loginResponse.authResponse.accessToken\n                        } as SocialUser)\n                    ))\n            ));\n    }\n\n    logout(): Observable<any> {\n        FB.logout();\n        return of(true);\n    }\n}\n","import { Observable, from } from 'rxjs';\nimport { OauthProvider } from './oauth-provider';\nimport { map } from 'rxjs/operators';\nimport { GoogleProviderConfig } from '../models/config/google-provider-config';\nimport { Provider } from '../models/provider';\nimport { SocialUser } from '../models/social-user';\n\ndeclare const gapi: any;\n\nexport class GoogleProvider extends OauthProvider {\n    private _googleAuth: any;\n\n    constructor(config: GoogleProviderConfig) {\n        super(Provider.GOOGLE, '//apis.google.com/js/platform.js', () => {\n            gapi.load('auth2', () => {\n                const conf = !config.scope ? { ...config, ...{ scope: 'email' } } : config;\n                gapi.auth2.init(conf).then(auth => (this._googleAuth = auth));\n            });\n        });\n    }\n\n    login(): Observable<SocialUser> {\n        return from(this._googleAuth.signIn({ prompt: 'select_account' })).pipe(\n            map(() => {\n                const profile = this._googleAuth.currentUser.get().getBasicProfile();\n                const accessToken = this._googleAuth.currentUser.get().getAuthResponse(true).access_token;\n                const idToken = this._googleAuth.currentUser.get().getAuthResponse(true).id_token;\n\n                return {\n                    id: profile.getId(),\n                    email: profile.getEmail(),\n                    name: profile.getName(),\n                    profileImg: profile.getImageUrl(),\n                    accessToken: accessToken,\n                    idToken: idToken\n                };\n            })\n        );\n    }\n\n    logout(): Observable<any> {\n        return Observable.create(observer => observer.complete(this._googleAuth.signOut()));\n    }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { OauthProvider } from '../providers/oauth-provider';\nimport { Observable, EMPTY } from 'rxjs';\nimport { ProviderConfig } from '../models/config/provider-config';\nimport { CONFIG } from '../models/config-injection-token';\nimport { FacebookProvider } from '../providers/facebook-provider';\nimport { FacebookProviderConfig } from '../models/config/facebook-provider-config';\nimport { GoogleProviderConfig } from '../models/config/google-provider-config';\nimport { GoogleProvider } from '../providers/google-provider';\nimport { Provider } from '../models/provider';\nimport { SocialUser } from '../models/social-user';\n\n@Injectable()\nexport class SocialLoginService {\n    private readonly _providers: { [providerId: string]: OauthProvider } = {};\n\n    private _providerInUse: Provider;\n\n    constructor(@Inject(CONFIG) config: ProviderConfig) {\n        this._providers = Object.keys(config).reduce((obj, providerId) => {\n            const provider = Provider[providerId.toUpperCase()];\n            obj[provider] = this.oauthProviderFactory(provider, config[providerId]);\n            return obj;\n        }, {});\n    }\n\n    login(provider: Provider): Observable<SocialUser> {\n        this._providerInUse = provider;\n        const oauthProvider = this._providers[provider];\n        return oauthProvider ? oauthProvider.login() : EMPTY;\n    }\n\n    logout(): Observable<SocialUser> {\n        const oauthProvider = this._providers[this._providerInUse];\n        const ret = oauthProvider ? oauthProvider.logout() : EMPTY;\n        this._providerInUse = undefined;\n        return ret;\n    }\n\n    loggedIn(): boolean {\n        return this._providerInUse ? true : false;\n    }\n\n    private oauthProviderFactory(\n        provider: Provider,\n        config: GoogleProviderConfig | FacebookProviderConfig\n    ): OauthProvider {\n        switch (provider) {\n            case Provider.FACEBOOK:\n                return new FacebookProvider(config as FacebookProviderConfig);\n            case Provider.GOOGLE:\n                return new GoogleProvider(config as GoogleProviderConfig);\n        }\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {SocialLoginService} from './services/social-login.service';\nimport {ProviderConfig} from './models/config/provider-config';\nimport {CONFIG} from './models/config-injection-token';\n\n@NgModule({\n    providers: [SocialLoginService]\n})\nexport class NgxSocialLoginModule {\n\n    static init(config: ProviderConfig): ModuleWithProviders {\n        return {\n            ngModule: NgxSocialLoginModule,\n            providers: [\n                {provide: CONFIG, useValue: config}\n            ]\n        };\n    }\n}\n","export interface SocialUser {\n\n    id: string;\n\n    email: string;\n\n    name: string;\n\n    profileImg: string;\n\n    firstName?: string;\n\n    lastName?: string;\n\n    accessToken: string;\n\n    idToken: string;\n\n}\n","export interface FacebookProviderConfig {\n\n    initOptions: {\n        appId: string;\n\n        version?: string;\n\n        cookie?: boolean;\n\n        status?: boolean;\n\n        xfbml?: boolean;\n\n        frictionlessRequests?: boolean;\n\n        hideFlashCallback?: () => void;\n    };\n\n    loginOptions?: {\n        auth_type?: string;\n\n        scope?: string;\n\n        return_scopes?: boolean;\n\n        enable_profile_selector?: boolean;\n\n        profile_selector_ids?: string;\n    };\n\n}\n","export interface GoogleProviderConfig {\n\n    client_id: string;\n\n    cookie_policy?: string;\n\n    scope?: string;\n\n    fetch_basic_profile?: boolean;\n\n    hosted_domain?: string;\n\n    openid_realm?: string;\n\n    ux_mode?: string;\n\n    redirect_uri?: string;\n\n}\n","import {GoogleProviderConfig} from './google-provider-config';\nimport {FacebookProviderConfig} from './facebook-provider-config';\n\nexport interface ProviderConfig {\n\n    google?: GoogleProviderConfig;\n\n    facebook?: FacebookProviderConfig;\n\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}